<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lodgment">
	<!-- 단건 조회 -->
	<select id="getLodgment" parameterType="lodgment" resultType="lodgment">
		SELECT * FROM LODGMENT
			WHERE LODGMENT_NO = #{lodgmentNo}
	</select>

	<!-- 전체 조회 -->
	<select id="getLodgments" resultType="lodgment" parameterType="lodgmentSearch">
	SELECT * FROM ( SELECT U.*, ROWNUM RN FROM (
		SELECT LODGMENT_NO, COMPANY, ADDRESS,
			   LOCATION, LODGMENT_TYPE, LODGMENT_INFO, HOST_NAME, LODGMENT_IMG,
                case LODGMENT_TYPE when 'A1' then '모텔'
                                    when 'A2' then '호텔'
                                    when 'A3' then '펜션'
                                    when 'A4' then '게스트하우스'
                                    end LODGMENT_TYPE_NAME,
			   (SELECT COUNT(*)
				FROM ROOM
				WHERE ROOM.LODGMENT_NO = LODGMENT.LODGMENT_NO)
				AS roomCnt
			FROM LODGMENT
		<where>
			<if test="ids != null">
				LODGMENT_NO IN
				<foreach collection="ids" open="(" close=")" separator="," item="item">
					#{item}
				</foreach>
			</if>

			<if test="location != null and location !=''">
				AND LOCATION = #{location}
			</if>
			<if test="searchCondition == 'lodgmentNo'">
				AND LODGMENT_NO LIKE '%' || #{searchKeyword} || '%'
			</if>
						
			<if test="searchCondition == 'company'">
				AND COMPANY LIKE '%' || #{searchKeyword} || '%'
			</if>
			<if test="searchCondition == 'location'">
				AND LOCATION LIKE '%' || #{searchKeyword} || '%'		
			</if>
<!-- 			<if test="role != null and role != ''">
				AND ROLE = #{role}
			</if> -->
		</where>
		ORDER BY SIGNUP_DATE DESC

	) U ) A WHERE RN BETWEEN #{start} and #{end}
	</select>
	
	<!-- 페이징 처리에 필요. 검색 조건에 대한 Cnt 조회 -->
	<select id="getCnt" resultType="int" parameterType="lodgmentSearch">
		SELECT COUNT(*)
			FROM LODGMENT
		<where>
			<if test="ids != null">
				LODGMENT_NO IN
				<foreach collection="ids" open="(" close=")" separator="," item="item">
					#{item}
				</foreach>
			</if>
			<if test="location != null and location !=''">
				AND LOCATION = #{location}
			</if>			
			<if test="searchCondition == 'company'">
				AND COMPANY LIKE '%' || #{searchKeyword} || '%'
			</if>
			<if test="searchCondition == 'location'">
				AND LOCATION LIKE '%' || #{searchKeyword} || '%'		
			</if>
		</where>
	</select>

	<select id="getMainSearch" parameterType="lodgmentSearch" resultType="lodgment">
		  SELECT l.LODGMENT_IMG ,l.LODGMENT_NO,l.COMPANY, g.AVG_GRADE, g.people_cnt
	      FROM LODGMENT l  LEFT OUTER JOIN (SELECT ROUND(AVG(GRADE),1) AS AVG_GRADE ,COUNT(*) AS people_cnt, LODGMENT_NO
	                                        FROM POSTSCRIPT
	                                        GROUP BY LODGMENT_NO) g
	      ON l.LODGMENT_NO = g.LODGMENT_NO
	      <where> 
	      	<if test="location != null and location != '' ">
	      		AND l.LOCATION = #{location}
	      	</if>
	      	
	      	<if test="lodgmentType != null and lodgmentType != '' ">	
	      		AND l.LODGMENT_TYPE = #{lodgmentType}
	      	</if>
	      	
	      	<if test="searchKeyword != null and searchKeyword !=''">
	      		AND l.LODGMENT_NO IN (SELECT LODGMENT_NO FROM HASHTAG
	      							  WHERE HASHTAG_CONTENT = #{searchKeyword})
	      	</if>
			
			 <if test="sort != null and sort != '' ">		
	      		ORDER BY #{sort} DESC
	      	</if>		      	
	      </where>
	</select>
	
	<update id="setLodgment" parameterType="lodgment">
		UPDATE LODGMENT
		<set> 
			  <if test="company != null and company != ''">
			  	COMPANY 	 	= #{company},
			  </if>
			  <if test="lodgmentType != null and lodgmentType != ''">
			 	 LODGMENT_TYPE 	= #{lodgmentType},
			  </if>
			  <if test="lodgmentImg != null and lodgmentImg != ''">
			  	  LODGMENT_IMG	= #{lodgmentImg},
			  </if>
			  <if test="lodgmentInfo != null and lodgmentInfo != ''">
			  		LODGMENT_INFO 	= #{lodgmentInfo}
			  </if>
			  
		</set>
		WHERE LODGMENT_NO	= #{lodgmentNo}
	
	</update>
	
	<insert id="insertHashTag" parameterType="hashtag">
		INSERT INTO HASHTAG(HASHTAG_NO, HASHTAG_CONTENT, LODGMENT_NO)
		VALUES(TO_CHAR(HASHTAG_SEQ.nextval), #{hashtagContent}, #{lodgmentNo})
	</insert>
	
	<select id="getHashTags" resultType="hashtag">
		SELECT 
        case HASHTAG_CONTENT when 'E1' then '주차가능'
                          	 when 'E2' then '파티룸'
                          	 when 'E3' then '24시간데스크'
                          	 when 'E4' then '객실내PC'
                          	 when 'E5' then '객실금연'
                          	 when 'E6' then '비즈니스'
                          	 when 'E7' then '글램핑'
                          	 when 'E8' then 'VOD'
                          	 when 'E9' then '와이파이'
                          	 when 'E10' then '식사가능'
                          	 when 'E11' then '레스토랑'
                          	 when 'E12' then '바베큐'
                          	 <!--  when 'E13' then '매점/편의점'-->
                          	 when 'E14' then '수영장'
                          	 when 'E15' then '주방'
                          	 when 'E16' then '카페'
                          	 when 'E17' then '투어'
                          END AS HASHTAG_CONTENT,
		LODGMENT_NO,
		HASHTAG_NO	                          

		FROM HASHTAG
		WHERE LODGMENT_NO = #{lodgmentNo}
	</select>
	
	<!-- 삭제 -->
	<delete id="deleteLodgment" parameterType="lodgment">
		DELETE FROM LODGMENT WHERE LODGMENT_NO = #{lodgmentNo}
	</delete>
	
</mapper> 